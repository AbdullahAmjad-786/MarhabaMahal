<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{D910E93B-202E-4721-85A2-DEF14C5F8E08}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Marhaba.Tests</RootNamespace>
    <AssemblyName>Marhaba.Tests</AssemblyName>
    <TargetFrameworkVersion>v4.5.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ProjectTypeGuids>{3AC096D0-A1C2-E12C-1390-A8335801FDAB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <VisualStudioVersion Condition="'$(VisualStudioVersion)' == ''">10.0</VisualStudioVersion>
    <VSToolsPath Condition="'$(VSToolsPath)' == ''">$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)</VSToolsPath>
    <ReferencePath>$(ProgramFiles)\Common Files\microsoft shared\VSTT\$(VisualStudioVersion)\UITestExtensionPackages</ReferencePath>
    <IsCodedUITest>False</IsCodedUITest>
    <TestProjectType>UnitTest</TestProjectType>
    <CodeContractsEnableRuntimeChecking>True</CodeContractsEnableRuntimeChecking>
    <CodeContractsRuntimeCheckingLevel>Full</CodeContractsRuntimeCheckingLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.ExtendedReflection, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files (x86)\Microsoft Visual Studio 14.0\Common7\IDE\Extensions\Microsoft\Pex\Microsoft.ExtendedReflection.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.Pex.Framework">
      <HintPath>C:\Program Files (x86)\Microsoft Visual Studio 14.0\Common7\IDE\Extensions\Microsoft\Pex\Microsoft.Pex.Framework.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Drawing" />
    <Reference Include="System.Windows.Forms" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\MarhabaDatabase\MarhabaDatabase.csproj">
      <Project>{CF491E4F-F1D1-4386-8B6C-4295FC4E150C}</Project>
      <Name>MarhabaDatabase</Name>
    </ProjectReference>
    <ProjectReference Include="..\MarhabaMahal\Marhaba.csproj">
      <Project>{5989D4D1-6F01-4017-AB6F-3DCED53E419B}</Project>
      <Name>Marhaba</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="OrdersPanelTest.cs" />
    <Compile Include="OrdersPanelTest.roundupbytenTest.g.cs">
      <DependentUpon>OrdersPanelTest.cs</DependentUpon>
    </Compile>
    <Compile Include="OrdersTest.addPendingPaymentTest.g.cs">
      <DependentUpon>OrdersTest.cs</DependentUpon>
    </Compile>
    <Compile Include="OrdersTest.ConstructorTest.g.cs">
      <DependentUpon>OrdersTest.cs</DependentUpon>
    </Compile>
    <Compile Include="OrdersTest.cs" />
    <Compile Include="OrdersTest.findPhoneTest.g.cs">
      <DependentUpon>OrdersTest.cs</DependentUpon>
    </Compile>
    <Compile Include="OrdersTest.GetBillItemsTest.g.cs">
      <DependentUpon>OrdersTest.cs</DependentUpon>
    </Compile>
    <Compile Include="OrdersTest.getClosingViewTest.g.cs">
      <DependentUpon>OrdersTest.cs</DependentUpon>
    </Compile>
    <Compile Include="OrdersTest.getGrandTotalTest.g.cs">
      <DependentUpon>OrdersTest.cs</DependentUpon>
    </Compile>
    <Compile Include="OrdersTest.getItemCodeTest.g.cs">
      <DependentUpon>OrdersTest.cs</DependentUpon>
    </Compile>
    <Compile Include="OrdersTest.getNameTest.g.cs">
      <DependentUpon>OrdersTest.cs</DependentUpon>
    </Compile>
    <Compile Include="OrdersTest.getNumberOfItemsWithBillIdTest.g.cs">
      <DependentUpon>OrdersTest.cs</DependentUpon>
    </Compile>
    <Compile Include="OrdersTest.getNumberOfPendingDeliveriesTest.g.cs">
      <DependentUpon>OrdersTest.cs</DependentUpon>
    </Compile>
    <Compile Include="OrdersTest.getNumberOfPendingOrdersFromBillTest.g.cs">
      <DependentUpon>OrdersTest.cs</DependentUpon>
    </Compile>
    <Compile Include="OrdersTest.getNumberOfPendingOrdersTest.g.cs">
      <DependentUpon>OrdersTest.cs</DependentUpon>
    </Compile>
    <Compile Include="OrdersTest.GetPendingDeliveriesTest.g.cs">
      <DependentUpon>OrdersTest.cs</DependentUpon>
    </Compile>
    <Compile Include="OrdersTest.GetPendingOrdersFromBillItemTest.g.cs">
      <DependentUpon>OrdersTest.cs</DependentUpon>
    </Compile>
    <Compile Include="OrdersTest.GetPendingOrdersTest.g.cs">
      <DependentUpon>OrdersTest.cs</DependentUpon>
    </Compile>
    <Compile Include="OrdersTest.getPendingPayemntTest.g.cs">
      <DependentUpon>OrdersTest.cs</DependentUpon>
    </Compile>
    <Compile Include="OrdersTest.GetPendingPaymentsTest.g.cs">
      <DependentUpon>OrdersTest.cs</DependentUpon>
    </Compile>
    <Compile Include="OrdersTest.getPendingTablesTest.g.cs">
      <DependentUpon>OrdersTest.cs</DependentUpon>
    </Compile>
    <Compile Include="OrdersTest.getPriceTest.g.cs">
      <DependentUpon>OrdersTest.cs</DependentUpon>
    </Compile>
    <Compile Include="OrdersTest.insertBillTest.g.cs">
      <DependentUpon>OrdersTest.cs</DependentUpon>
    </Compile>
    <Compile Include="OrdersTest.insertClosingTest.g.cs">
      <DependentUpon>OrdersTest.cs</DependentUpon>
    </Compile>
    <Compile Include="OrdersTest.insertPendingDeliveryTest.g.cs">
      <DependentUpon>OrdersTest.cs</DependentUpon>
    </Compile>
    <Compile Include="OrdersTest.insertPendingOrdersTest.g.cs">
      <DependentUpon>OrdersTest.cs</DependentUpon>
    </Compile>
    <Compile Include="OrdersTest.insertToBillItemsTest.g.cs">
      <DependentUpon>OrdersTest.cs</DependentUpon>
    </Compile>
    <Compile Include="OrdersTest.removeBillItemTest.g.cs">
      <DependentUpon>OrdersTest.cs</DependentUpon>
    </Compile>
    <Compile Include="OrdersTest.removePendingDeliveriesTest.g.cs">
      <DependentUpon>OrdersTest.cs</DependentUpon>
    </Compile>
    <Compile Include="OrdersTest.removePendingOrderTest.g.cs">
      <DependentUpon>OrdersTest.cs</DependentUpon>
    </Compile>
    <Compile Include="OrdersTest.removePendingPaymentsTest.g.cs">
      <DependentUpon>OrdersTest.cs</DependentUpon>
    </Compile>
    <Compile Include="OrdersTest.updateBillItemsTest.g.cs">
      <DependentUpon>OrdersTest.cs</DependentUpon>
    </Compile>
    <Compile Include="OrdersTest.updateBillTest.g.cs">
      <DependentUpon>OrdersTest.cs</DependentUpon>
    </Compile>
    <Compile Include="OrdersTest.updateClosingTest.g.cs">
      <DependentUpon>OrdersTest.cs</DependentUpon>
    </Compile>
    <Compile Include="OrdersTest.updateCreditCardTest.g.cs">
      <DependentUpon>OrdersTest.cs</DependentUpon>
    </Compile>
    <Compile Include="OrdersTest.updatePendingDeliveryTest.g.cs">
      <DependentUpon>OrdersTest.cs</DependentUpon>
    </Compile>
    <Compile Include="OrdersTest.updatePendingOrdersTest.g.cs">
      <DependentUpon>OrdersTest.cs</DependentUpon>
    </Compile>
    <Compile Include="OrdersTest.updatePendingPaymentsTest.g.cs">
      <DependentUpon>OrdersTest.cs</DependentUpon>
    </Compile>
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Properties\PexAssemblyInfo.cs" />
  </ItemGroup>
  <Choose>
    <When Condition="('$(VisualStudioVersion)' == '10.0' or '$(VisualStudioVersion)' == '') and '$(TargetFrameworkVersion)' == 'v3.5'">
      <ItemGroup>
        <Reference Include="Microsoft.VisualStudio.QualityTools.UnitTestFramework, Version=10.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL" />
      </ItemGroup>
    </When>
    <Otherwise>
      <ItemGroup>
        <Reference Include="Microsoft.VisualStudio.QualityTools.UnitTestFramework" />
      </ItemGroup>
    </Otherwise>
  </Choose>
  <Choose>
    <When Condition="'$(VisualStudioVersion)' == '10.0' And '$(IsCodedUITest)' == 'True'">
      <ItemGroup>
        <Reference Include="Microsoft.VisualStudio.QualityTools.CodedUITestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
          <Private>False</Private>
        </Reference>
        <Reference Include="Microsoft.VisualStudio.TestTools.UITest.Common, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
          <Private>False</Private>
        </Reference>
        <Reference Include="Microsoft.VisualStudio.TestTools.UITest.Extension, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
          <Private>False</Private>
        </Reference>
        <Reference Include="Microsoft.VisualStudio.TestTools.UITesting, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
          <Private>False</Private>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <Import Project="$(VSToolsPath)\TeamTest\Microsoft.TestTools.targets" Condition="Exists('$(VSToolsPath)\TeamTest\Microsoft.TestTools.targets')" />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>